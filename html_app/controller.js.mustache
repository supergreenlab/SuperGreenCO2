window.onSubmitControllerParam = async function(keyId) {
  const key = config.keys[keyId]
  let value = document.getElementById(`value_${key.caps_name}`).value
  document.getElementById(`param_${key.caps_name}`).classList.add('param_loading')
  await updateParam(key.integer ? 'i' : 's', `${key.caps_name}`, value)
  value = await fetchParam(key.integer ? 'i' : 's', key.caps_name)
  document.getElementById(`value_${key.caps_name}`).value = value
  document.getElementById(`param_${key.caps_name}`).classList.remove('param_loading')
}

const loadControllerParams = async function() {
  let p = Promise.resolve()
  for (let i = 0; i < config.keys.length; ++i) {
    const key = config.keys[i]
    if (key.led || key.box || !key.http) continue
    const np = p.then(((keyId, key) => async () => {
      const value = await fetchParam(key.integer ? 'i' : 's', key.caps_name)
      document.getElementById(`param_${key.caps_name}`).classList.remove('param_loading')
      const el = document.getElementById(`value_${key.caps_name}`)
      if (el.value) {
        el.value = value
      } else {
        el.innerText = value
      }
    })(i, key))
    if (i % 3 == 0) {
      p = np;
    }
  }
  return p
}

const renderControllerReadonly = async function() {
  let html = []
  for (let i = 0; i < config.keys.length; ++i) {
    const key = config.keys[i]
    if (key.led || key.box || !key.http || key.http.write) continue
    // replace with mustache template
    html.push(`<div class='param param_loading' id='param_${key.caps_name}'>
          <b>${key.name}:</b>&nbsp;<span id='value_${key.caps_name}'>-</span>
      </div>`)
  }
  document.getElementById('controller_readonly_0').innerHTML = html.sort().slice(0, html.length / 2).join('')
  document.getElementById('controller_readonly_1').innerHTML = html.sort().slice(html.length / 2).join('')
}

const renderControllerAdvance = async function() {
  let html = []
  for (let i = 0; i < config.keys.length; ++i) {
    const key = config.keys[i]
    if (key.led || key.box || !key.http || !key.http.write) continue
    // replace with mustache template
    html.push(`<div class='param_loading' id='param_${key.caps_name}'>
        <form class='param' onSubmit='onSubmitControllerParam(${i}); return false'>
          <label for='${key.caps_name}'>${key.name}</label>
          <input type='text' value='-' name='${key.caps_name}' id='value_${key.caps_name}' />
        </form>

      </div>`)
  }
  document.getElementById('controller_advance_0').innerHTML = html.sort().slice(0, html.length / 2).join('')
  document.getElementById('controller_advance_1').innerHTML = html.sort().slice(html.length / 2).join('')
}

window.onToggleControllerSettings = function() {
  var el = document.getElementById('controller')
  if (el.classList.contains('controller_visible')) {
    el.classList.remove('controller_visible')
    el.classList.add('controller_hidden')
  } else {
    el.classList.add('controller_visible')
    el.classList.remove('controller_hidden')
  }
}

const renderController = async function() {
  renderControllerReadonly()
  renderControllerAdvance()
  await loadControllerParams();
}
