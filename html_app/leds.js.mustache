window.onSubmitLedParam = async function(keyId) {
  const key = config.keys[keyId]
  let value = document.getElementById(`value_${key.caps_name}`).value
  document.getElementById(`param_${key.caps_name}`).classList.add('param_loading')
  await updateParam(key.integer ? 'i' : 's', `${key.caps_name}`, value)
  value = await fetchParam(key.integer ? 'i' : 's', key.caps_name)
  document.getElementById(`value_${key.caps_name}`).value = value
  document.getElementById(`param_${key.caps_name}`).classList.remove('param_loading')
}

const loadLedParams = async function() {
  let p = Promise.resolve(), c = 0

  for (let j = 0; j < config.led_loop_i.length; ++j) {
    for (let i = 0; i < config.keys.length; ++i) {
      const key = config.keys[i]
      if (!key.led || key.led.index != j || !key.http) continue
      const np = p.then(((keyId, key) => async () => {
        const value = await fetchParam(key.integer ? 'i' : 's', key.caps_name)
        document.getElementById(`param_${key.caps_name}`).classList.remove('param_loading')
        const el = document.getElementById(`value_${key.caps_name}`)
        if (el.value) {
          el.value = value
        } else {
          el.innerText = value
        }
      })(i, key))
      if ((c++) % 3 == 0) {
        p = np;
      }
    }
  }
  return p
}

const renderLedAdvance = async function() {
  let html = []
  for (let j = 0; j < config.led_loop_i.length; ++j) {
    let led_html = `<h3>Led ${j+1}</h3>`
    for (let i = 0; i < config.keys.length; ++i) {
      const key = config.keys[i]
      if (!key.led || key.led.index != j || !key.http || !key.http.write) continue
      // replace with mustache template
      led_html += `<div class='param_loading' id='param_${key.caps_name}'>
        <form class='param' onSubmit='onSubmitLedParam(${i}); return false'>
          <label for='${key.caps_name}'>${key.led.param}</label>
          <input type='text' value='-' name='${key.caps_name}' id='value_${key.caps_name}' />
        </form>

      </div>`
    }
    html.push(`<div class='param_list'>${led_html}</div>`)
  }
  document.getElementById('led_advance_0').innerHTML = html.sort().slice(0, html.length / 2).join('')
  document.getElementById('led_advance_1').innerHTML = html.sort().slice(html.length / 2).join('')
}

const renderLeds = async function() {
  renderLedAdvance()
  await loadLedParams()
}
